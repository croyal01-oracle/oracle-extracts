--EXAMPLE OF EXTRACT THE SELECT STATEMENT OF A VIEW
--EXAMPLE OF EXTRACT THE SELECT STATEMENT OF A VIEW
--blank
--HELPFUL HINTS >>> first, find the view you want the select statement
--HELPFUL HINTS >>> from the ALL_VIEWS; find VIEW_NAME and TEXT_LENGTH
--HELPFUL HINTS >>> before running the query set LONG to TEXT_LENGTH
--HELPFUL HINTS >>> of the record you intend to extract; also, set LINESIZE
--HELPFUL HINTS >>> in order to either word wrap or not; also, set PAGESIZE
--HELPFUL HINTS >>> in order to alleviate the header info repeating
--COMMON PROBLEM >> I have found that the biggest problem running the spooled
--COMMON PROBLEM >> sql is editing all the white space out of the SELECT,FROM,
--COMMON PROBLEM >> and WHERE clauses and connecting the incredibly long lines


SELECT
--substr(owner,0,10) OWNER
--,substr(view_name,0,50) VIEW_NAME
--,substr(text_length,0,50) TEXT_LENGTH
--,
TEXT
--,substr(type_text_length,0,50) TYPE_TEXT_LENGTH
--,substr(type_text,0,50) TYPE_TEXT
--,substr(oid_text_length,0,20) OID_TEXT_LENGTH
--,substr(oid_text,0,20) OID_TEXT
--,substr(view_type_owner,0,20) VIEW_TYPE_OWNER
--,substr(view_type,0,20) VIEW_TYPE
FROM
all_views
WHERE
view_name like '&view_name'
/


--EXAMPLE EXTRACT AND RESULTS
--EXAMPLE EXTRACT AND RESULTS
SQL> set LONG 1960
SQL> set LINESIZE 100
SQL> 
SQL> /
Enter value for view_name: GL_BUDGETS_V
old  17: AND view_name like '&view_name'
new  17: AND view_name like 'GL_BUDGETS_V'

TEXT
--------------------------------------------------------------------------------
SELECT B.ROWID ROW_ID , B.BUDGET_NAME BUDGET_NAME , BV.BUDGET_VERSION_ID BUDGET_
VERSION_ID , B.STATUS STATUS , ST.MEANING SHOW_STATUS , B.REQUIRE_BUDGET_JOURNAL
S_FLAG REQUIRE_BUDGET_JOURNALS_FLAG , B.FIRST_VALID_PERIOD_NAME FIRST_VALID_PERI
OD_NAME , B.LAST_VALID_PERIOD_NAME LAST_VALID_PERIOD_NAME , DEST_PER.PERIOD_YEAR
 LAST_VALID_YEAR , DEST_PER.PERIOD_NUM LAST_VALID_PERIOD_NUM , START_PER.PERIOD_
YEAR FIRST_VALID_YEAR , START_PER.PERIOD_NUM FIRST_VALID_PERIOD_NUM , START_PER.
START_DATE START_DATE , DEST_PER.END_DATE END_DATE , B.LATEST_OPENED_YEAR LATEST
_OPENED_YEAR , B.DESCRIPTION DESCRIPTION , B.DATE_CREATED DATE_CREATED , B.DATE_
CLOSED DATE_CLOSED , B.SET_OF_BOOKS_ID SET_OF_BOOKS_ID , B.CURRENT_VERSION_ID CU
RRENT_VERSION_ID , B.BUDGET_TYPE BUDGET_TYPE , MBV.BUDGET_VERSION_ID MASTER_BUDG
ET_VERSION_ID , MBV.BUDGET_NAME MASTER_BUDGET_NAME , B.CREATION_DATE CREATION_DA
TE , B.CREATED_BY CREATED_BY , B.LAST_UPDATE_DATE LAST_UPDATE_DATE , B.LAST_UPDA
TED_BY LAST_UPDATED_BY , B.LAST_UPDATE_LOGIN LAST_UPDATE_LOGIN , B.CONTEXT CONTE
XT , B.ATTRIBUTE1 ATTRIBUTE1 , B.ATTRIBUTE2 ATTRIBUTE2 , B.ATTRIBUTE3 ATTRIBUTE3
 , B.ATTRIBUTE4 ATTRIBUTE4 , B.ATTRIBUTE5 ATTRIBUTE5 , B.ATTRIBUTE6 ATTRIBUTE6 ,
 B.ATTRIBUTE7 ATTRIBUTE7 , B.ATTRIBUTE8 ATTRIBUTE8 FROM GL_BUDGETS B, GL_BUDGET_
VERSIONS BV, GL_PERIOD_STATUSES DEST_PER, GL_PERIOD_STATUSES START_PER, GL_BUDGE
T_VERSIONS MBV, GL_LOOKUPS ST WHERE BV.BUDGET_NAME = B.BUDGET_NAME||'' AND DEST_
PER.APPLICATION_ID = DECODE(B.SET_OF_BOOKS_ID, NULL, 101, 101) AND DEST_PER.SET_
OF_BOOKS_ID = B.SET_OF_BOOKS_ID AND DEST_PER.PERIOD_NAME = B.LAST_VALID_PERIOD_N
AME AND START_PER.APPLICATION_ID = DECODE(B.SET_OF_BOOKS_ID, NULL, 101, 101) AND
 START_PER.SET_OF_BOOKS_ID = B.SET_OF_BOOKS_ID AND START_PER.PERIOD_NAME = B.FIR
ST_VALID_PERIOD_NAME AND MBV.BUDGET_VERSION_ID(+) = BV.CONTROL_BUDGET_VERSION_ID
 AND ST.LOOKUP_TYPE = DECODE(B.STATUS, NULL, 'PLAN/VERSION STATUS', 'PLAN/VERSIO
N STATUS') AND ST.LOOKUP_CODE = B.STATUS

--Begin Comment
--***********************************************************************/
--***********************************************************************/
--** Clayton Royal, EDS (Vectren account); 10-JAN-01.                  **/
--***********************************************************************/
--***********************************************************************/
--End Comment